pre
  code.lang-javascript
    .fragment
      | function* sagaInvoker() {
      .fragment
        |   // Every time a SAVE is seen kick off instance of 'save' Saga
        |   yield fork(takeEvery("SAVE", save));
      | }
    |
    |
    .fragment
      | function* save(saveAction) {
      .fragment
        |   try {
        .fragment
          |     // Dispatch action for user to CONFIRM save
          |     yield put({ type: "CONFIRM" });
          |
          .fragment
            |     // Wait for user to respond with CONFIRM or CANCEL
            |     const response = take(["CANCELLED", "CONFIRMED"]);
            |     if (response.type === "CANCELLED") {
            |       return;
            |     }
            |
            .fragment
              |     // Kick off API call to save
              |     yield call(Api.save, action.value);
              .fragment
                |     // API call succeeded, dispatch SUCCESS action
                |     yield put({ type: "SAVE_SUCCESS" });
        |   } catch (error) {
        .fragment
          |     // Any errors fall into here, dispatch FAILURE action
          |     yield put({ type: "SAVE_FAILURE" });
        |   }
      | }
